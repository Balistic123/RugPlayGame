{"version":3,"file":"_server.ts-B23wJt0t.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/gambling/coinflip/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../../chunks/index.js\";\nimport { d as db, u as user } from \"../../../../../chunks/index4.js\";\nimport { eq } from \"drizzle-orm\";\nimport { randomBytes } from \"crypto\";\nconst POST = async ({ request }) => {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  try {\n    const { side, amount } = await request.json();\n    if (![\"heads\", \"tails\"].includes(side)) {\n      return json({ error: \"Invalid side\" }, { status: 400 });\n    }\n    if (!amount || amount <= 0 || !Number.isFinite(amount)) {\n      return json({ error: \"Invalid bet amount\" }, { status: 400 });\n    }\n    if (amount > 1e6) {\n      return json({ error: \"Bet amount too large\" }, { status: 400 });\n    }\n    const userId = Number(session.user.id);\n    const result = await db.transaction(async (tx) => {\n      const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, userId)).for(\"update\").limit(1);\n      const currentBalance = Number(userData.baseCurrencyBalance);\n      const roundedAmount = Math.round(amount * 1e8) / 1e8;\n      const roundedBalance = Math.round(currentBalance * 1e8) / 1e8;\n      if (roundedAmount > roundedBalance) {\n        throw new Error(`Insufficient funds. You need *${roundedAmount.toFixed(2)} but only have *${roundedBalance.toFixed(2)}`);\n      }\n      const gameResult = randomBytes(1)[0] < 128 ? \"heads\" : \"tails\";\n      const won = gameResult === side;\n      const multiplier = 2;\n      const payout = won ? roundedAmount * multiplier : 0;\n      const newBalance = roundedBalance - roundedAmount + payout;\n      await tx.update(user).set({\n        baseCurrencyBalance: newBalance.toFixed(8),\n        updatedAt: /* @__PURE__ */ new Date()\n      }).where(eq(user.id, userId));\n      return {\n        won,\n        result: gameResult,\n        newBalance,\n        payout,\n        amountWagered: roundedAmount\n      };\n    });\n    return json(result);\n  } catch (e) {\n    console.error(\"Coinflip API error:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"Internal server error\";\n    return json({ error: errorMessage }, { status: 400 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}