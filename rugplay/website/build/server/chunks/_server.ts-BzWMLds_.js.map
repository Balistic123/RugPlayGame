{"version":3,"file":"_server.ts-BzWMLds_.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/trades/recent/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../../chunks/index.js\";\nimport { d as db, t as transaction, c as coin, u as user } from \"../../../../../chunks/index4.js\";\nimport { eq, gte, desc } from \"drizzle-orm\";\nimport { v as validateSearchParams } from \"../../../../../chunks/validation.js\";\nasync function GET({ url }) {\n  const params = validateSearchParams(url.searchParams);\n  const requestedLimit = params.getPositiveInt(\"limit\", 100);\n  const limit = Math.min(requestedLimit, 1e3);\n  const minValue = params.getNonNegativeFloat(\"minValue\", 0);\n  try {\n    const trades = await db.select({\n      type: transaction.type,\n      username: user.username,\n      userImage: user.image,\n      amount: transaction.quantity,\n      coinSymbol: coin.symbol,\n      coinName: coin.name,\n      coinIcon: coin.icon,\n      totalValue: transaction.totalBaseCurrencyAmount,\n      price: transaction.pricePerCoin,\n      timestamp: transaction.timestamp,\n      userId: transaction.userId\n    }).from(transaction).innerJoin(user, eq(user.id, transaction.userId)).innerJoin(coin, eq(coin.id, transaction.coinId)).where(\n      minValue > 0 ? gte(transaction.totalBaseCurrencyAmount, minValue.toString()) : void 0\n    ).orderBy(desc(transaction.timestamp)).limit(limit);\n    const formattedTrades = trades.map((trade) => ({\n      type: trade.type,\n      username: trade.username,\n      userImage: trade.userImage,\n      amount: Number(trade.amount),\n      coinSymbol: trade.coinSymbol,\n      coinName: trade.coinName,\n      coinIcon: trade.coinIcon,\n      totalValue: Number(trade.totalValue),\n      price: Number(trade.price),\n      timestamp: trade.timestamp.getTime(),\n      userId: trade.userId?.toString() ?? \"\"\n    }));\n    return json({ trades: formattedTrades });\n  } catch (error) {\n    console.error(\"Error fetching recent trades:\", error);\n    return json({ trades: [] });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":";;;;;;;;;AAIA,eAAe,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;AAC5B,EAAE,MAAM,MAAM,GAAG,oBAAoB,CAAC,GAAG,CAAC,YAAY,CAAC;AACvD,EAAE,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC;AAC5D,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC;AAC7C,EAAE,MAAM,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC,CAAC;AAC5D,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC;AACnC,MAAM,IAAI,EAAE,WAAW,CAAC,IAAI;AAC5B,MAAM,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC7B,MAAM,SAAS,EAAE,IAAI,CAAC,KAAK;AAC3B,MAAM,MAAM,EAAE,WAAW,CAAC,QAAQ;AAClC,MAAM,UAAU,EAAE,IAAI,CAAC,MAAM;AAC7B,MAAM,QAAQ,EAAE,IAAI,CAAC,IAAI;AACzB,MAAM,QAAQ,EAAE,IAAI,CAAC,IAAI;AACzB,MAAM,UAAU,EAAE,WAAW,CAAC,uBAAuB;AACrD,MAAM,KAAK,EAAE,WAAW,CAAC,YAAY;AACrC,MAAM,SAAS,EAAE,WAAW,CAAC,SAAS;AACtC,MAAM,MAAM,EAAE,WAAW,CAAC;AAC1B,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;AAChI,MAAM,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,uBAAuB,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK;AAC1F,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AACvD,IAAI,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,MAAM;AACnD,MAAM,IAAI,EAAE,KAAK,CAAC,IAAI;AACtB,MAAM,QAAQ,EAAE,KAAK,CAAC,QAAQ;AAC9B,MAAM,SAAS,EAAE,KAAK,CAAC,SAAS;AAChC,MAAM,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;AAClC,MAAM,UAAU,EAAE,KAAK,CAAC,UAAU;AAClC,MAAM,QAAQ,EAAE,KAAK,CAAC,QAAQ;AAC9B,MAAM,QAAQ,EAAE,KAAK,CAAC,QAAQ;AAC9B,MAAM,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;AAC1C,MAAM,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AAChC,MAAM,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE;AAC1C,MAAM,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI;AAC1C,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC;AAC5C,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC;AACzD,IAAI,OAAO,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;AAC/B;AACA;;;;"}