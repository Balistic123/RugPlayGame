{"version":3,"file":"_server.ts-CAfcPEa5.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/user/_userId_/_server.ts.js"],"sourcesContent":["import { e as error, j as json } from \"../../../../../chunks/index.js\";\nimport { d as db, u as user, c as coin, g as userPortfolio, t as transaction } from \"../../../../../chunks/index4.js\";\nimport { eq, desc, sql, count, and, gte } from \"drizzle-orm\";\nasync function GET({ params }) {\n  const { userId } = params;\n  if (!userId) {\n    throw error(400, \"User ID or username is required\");\n  }\n  try {\n    const isNumeric = /^\\d+$/.test(userId);\n    const userProfile = await db.query.user.findFirst({\n      where: isNumeric ? eq(user.id, parseInt(userId)) : eq(user.username, userId),\n      columns: {\n        id: true,\n        name: true,\n        username: true,\n        bio: true,\n        image: true,\n        createdAt: true,\n        baseCurrencyBalance: true,\n        isAdmin: true,\n        loginStreak: true,\n        prestigeLevel: true\n      }\n    });\n    if (!userProfile) {\n      throw error(404, \"User not found\");\n    }\n    const actualUserId = userProfile.id;\n    const createdCoins = await db.select({\n      id: coin.id,\n      name: coin.name,\n      symbol: coin.symbol,\n      icon: coin.icon,\n      currentPrice: coin.currentPrice,\n      marketCap: coin.marketCap,\n      volume24h: coin.volume24h,\n      change24h: coin.change24h,\n      createdAt: coin.createdAt\n    }).from(coin).where(eq(coin.creatorId, actualUserId)).orderBy(desc(coin.createdAt)).limit(10);\n    const portfolioHoldings = await db.select({\n      quantity: userPortfolio.quantity,\n      currentPrice: coin.currentPrice\n    }).from(userPortfolio).innerJoin(coin, eq(userPortfolio.coinId, coin.id)).where(eq(userPortfolio.userId, actualUserId));\n    const holdingsValue = portfolioHoldings.reduce((total, holding) => {\n      const quantity = Number(holding.quantity);\n      const price = Number(holding.currentPrice);\n      return total + quantity * price;\n    }, 0);\n    const portfolioStats = {\n      holdingsCount: portfolioHoldings.length,\n      totalValue: holdingsValue\n    };\n    const recentTransactions = await db.select({\n      id: transaction.id,\n      type: transaction.type,\n      coinSymbol: coin.symbol,\n      coinName: coin.name,\n      coinIcon: coin.icon,\n      quantity: transaction.quantity,\n      pricePerCoin: transaction.pricePerCoin,\n      totalBaseCurrencyAmount: transaction.totalBaseCurrencyAmount,\n      timestamp: transaction.timestamp,\n      senderUsername: sql`(SELECT username FROM ${user} WHERE id = ${transaction.senderUserId})`,\n      recipientUsername: sql`(SELECT username FROM ${user} WHERE id = ${transaction.recipientUserId})`,\n      senderUserId: transaction.senderUserId,\n      recipientUserId: transaction.recipientUserId\n    }).from(transaction).innerJoin(coin, eq(transaction.coinId, coin.id)).where(eq(transaction.userId, actualUserId)).orderBy(desc(transaction.timestamp)).limit(10);\n    const baseCurrencyBalance = parseFloat(userProfile.baseCurrencyBalance);\n    const calculatedHoldingsValue = portfolioStats.totalValue || 0;\n    const totalPortfolioValue = baseCurrencyBalance + calculatedHoldingsValue;\n    const transactionStats = await db.select({\n      totalTransactions: count(),\n      totalBuyVolume: sql`COALESCE(SUM(CASE WHEN ${transaction.type} = 'BUY' THEN CAST(${transaction.totalBaseCurrencyAmount} AS NUMERIC) ELSE 0 END), 0)`,\n      totalSellVolume: sql`COALESCE(SUM(CASE WHEN ${transaction.type} = 'SELL' THEN CAST(${transaction.totalBaseCurrencyAmount} AS NUMERIC) ELSE 0 END), 0)`\n    }).from(transaction).where(eq(transaction.userId, actualUserId));\n    const twentyFourHoursAgo = new Date(Date.now() - 24 * 60 * 60 * 1e3);\n    const transactionStats24h = await db.select({\n      transactions24h: count(),\n      buyVolume24h: sql`COALESCE(SUM(CASE WHEN ${transaction.type} = 'BUY' THEN CAST(${transaction.totalBaseCurrencyAmount} AS NUMERIC) ELSE 0 END), 0)`,\n      sellVolume24h: sql`COALESCE(SUM(CASE WHEN ${transaction.type} = 'SELL' THEN CAST(${transaction.totalBaseCurrencyAmount} AS NUMERIC) ELSE 0 END), 0)`\n    }).from(transaction).where(\n      and(\n        eq(transaction.userId, actualUserId),\n        gte(transaction.timestamp, twentyFourHoursAgo)\n      )\n    );\n    return json({\n      profile: {\n        ...userProfile,\n        baseCurrencyBalance,\n        totalPortfolioValue\n      },\n      stats: {\n        totalPortfolioValue,\n        baseCurrencyBalance,\n        holdingsValue: calculatedHoldingsValue,\n        holdingsCount: portfolioStats.holdingsCount || 0,\n        coinsCreated: createdCoins.length,\n        totalTransactions: transactionStats[0]?.totalTransactions || 0,\n        totalBuyVolume: transactionStats[0]?.totalBuyVolume || 0,\n        totalSellVolume: transactionStats[0]?.totalSellVolume || 0,\n        transactions24h: transactionStats24h[0]?.transactions24h || 0,\n        buyVolume24h: transactionStats24h[0]?.buyVolume24h || 0,\n        sellVolume24h: transactionStats24h[0]?.sellVolume24h || 0\n      },\n      createdCoins,\n      recentTransactions\n    });\n  } catch (e) {\n    console.error(\"Failed to fetch user profile:\", e);\n    throw error(500, \"Failed to fetch user profile\");\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}