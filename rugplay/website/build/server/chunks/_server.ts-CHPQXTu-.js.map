{"version":3,"file":"_server.ts-CHPQXTu-.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/coin/_coinSymbol_/comments/_id_/like/_server.ts.js"],"sourcesContent":["import { j as json, e as error } from \"../../../../../../../../chunks/index.js\";\nimport { d as db, f as comment, c as coin, e as commentLike } from \"../../../../../../../../chunks/index4.js\";\nimport { eq, and, sql } from \"drizzle-orm\";\nimport { a as auth } from \"../../../../../../../../chunks/auth.js\";\nimport { c as client } from \"../../../../../../../../chunks/redis.js\";\nconst POST = async ({ request, params }) => {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    return json({ message: \"Not authenticated\" }, { status: 401 });\n  }\n  const commentId = parseInt(params.id);\n  const { coinSymbol } = params;\n  const userId = Number(session.user.id);\n  if (isNaN(commentId)) {\n    return json({ message: \"Invalid comment ID\" }, { status: 400 });\n  }\n  try {\n    const [commentData] = await db.select().from(comment).innerJoin(coin, eq(comment.coinId, coin.id)).where(and(eq(comment.id, commentId), eq(coin.symbol, coinSymbol)));\n    if (!commentData) {\n      return json({ message: \"Comment not found\" }, { status: 404 });\n    }\n    const [existingLike] = await db.select().from(commentLike).where(and(eq(commentLike.userId, userId), eq(commentLike.commentId, commentId)));\n    if (existingLike) {\n      return json({ message: \"Comment already liked\" }, { status: 400 });\n    }\n    await db.transaction(async (tx) => {\n      await tx.insert(commentLike).values({ userId, commentId });\n      await tx.update(comment).set({ likesCount: sql`${comment.likesCount} + 1` }).where(eq(comment.id, commentId));\n    });\n    const [updatedComment] = await db.select({ likesCount: comment.likesCount }).from(comment).where(eq(comment.id, commentId));\n    await client.publish(\n      `comments:${coinSymbol.toUpperCase()}`,\n      JSON.stringify({\n        type: \"comment_liked\",\n        data: {\n          commentId: Number(commentId),\n          likesCount: updatedComment.likesCount,\n          isLikedByUser: true,\n          userId\n        }\n      })\n    );\n    return json({ success: true });\n  } catch (error2) {\n    console.error(\"Failed to like comment:\", error2);\n    return json({ message: \"Internal server error\" }, { status: 500 });\n  }\n};\nconst DELETE = async ({ request, params }) => {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  const commentId = parseInt(params.id);\n  const { coinSymbol } = params;\n  const userId = Number(session.user.id);\n  if (isNaN(commentId)) {\n    return json({ message: \"Invalid comment ID\" }, { status: 400 });\n  }\n  try {\n    const [commentData] = await db.select().from(comment).innerJoin(coin, eq(comment.coinId, coin.id)).where(and(eq(comment.id, commentId), eq(coin.symbol, coinSymbol)));\n    if (!commentData) {\n      return json({ message: \"Comment not found\" }, { status: 404 });\n    }\n    const [existingLike] = await db.select().from(commentLike).where(and(eq(commentLike.userId, userId), eq(commentLike.commentId, commentId)));\n    if (!existingLike) {\n      return json({ message: \"Comment not liked\" }, { status: 400 });\n    }\n    await db.transaction(async (tx) => {\n      await tx.delete(commentLike).where(and(eq(commentLike.userId, userId), eq(commentLike.commentId, commentId)));\n      await tx.update(comment).set({ likesCount: sql`GREATEST(0, ${comment.likesCount} - 1)` }).where(eq(comment.id, commentId));\n    });\n    const [updatedComment] = await db.select({ likesCount: comment.likesCount }).from(comment).where(eq(comment.id, commentId));\n    await client.publish(\n      `comments:${coinSymbol.toUpperCase()}`,\n      JSON.stringify({\n        type: \"comment_liked\",\n        data: {\n          commentId: Number(commentId),\n          likesCount: updatedComment.likesCount,\n          isLikedByUser: false,\n          userId\n        }\n      })\n    );\n    return json({ success: true });\n  } catch (error2) {\n    console.error(\"Failed to unlike comment:\", error2);\n    return json({ message: \"Internal server error\" }, { status: 500 });\n  }\n};\nexport {\n  DELETE,\n  POST\n};\n"],"names":[],"mappings":"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"}