{"version":3,"file":"_server.ts-CMfl--an.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/hopium/questions/_id_/bet/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../../../../chunks/index.js\";\nimport { d as db, h as predictionQuestion, u as user, i as predictionBet } from \"../../../../../../../chunks/index4.js\";\nimport { eq } from \"drizzle-orm\";\nconst POST = async ({ params, request }) => {\n  const session = await auth.api.getSession({ headers: request.headers });\n  if (!session?.user) throw error(401, \"Not authenticated\");\n  const questionId = parseInt(params.id);\n  const { side, amount } = await request.json();\n  if (typeof side !== \"boolean\" || !amount || amount <= 0) {\n    return json({ error: \"Invalid bet parameters\" }, { status: 400 });\n  }\n  const userId = Number(session.user.id);\n  try {\n    return await db.transaction(async (tx) => {\n      const [questionData] = await tx.select({\n        id: predictionQuestion.id,\n        status: predictionQuestion.status,\n        resolutionDate: predictionQuestion.resolutionDate,\n        totalYesAmount: predictionQuestion.totalYesAmount,\n        totalNoAmount: predictionQuestion.totalNoAmount\n      }).from(predictionQuestion).where(eq(predictionQuestion.id, questionId)).for(\"update\").limit(1);\n      if (!questionData) {\n        throw new Error(\"Question not found\");\n      }\n      if (questionData.status !== \"ACTIVE\") {\n        throw new Error(\"Question is not active for betting\");\n      }\n      if (/* @__PURE__ */ new Date() >= new Date(questionData.resolutionDate)) {\n        throw new Error(\"Question has reached resolution date\");\n      }\n      const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, userId)).for(\"update\").limit(1);\n      if (!userData || Number(userData.baseCurrencyBalance) < amount) {\n        throw new Error(\"Insufficient balance\");\n      }\n      await tx.update(user).set({\n        baseCurrencyBalance: (Number(userData.baseCurrencyBalance) - amount).toFixed(8),\n        updatedAt: /* @__PURE__ */ new Date()\n      }).where(eq(user.id, userId));\n      const [newBet] = await tx.insert(predictionBet).values({\n        userId,\n        questionId,\n        side,\n        amount: amount.toFixed(8)\n      }).returning();\n      const currentYesAmount = Number(questionData.totalYesAmount);\n      const currentNoAmount = Number(questionData.totalNoAmount);\n      await tx.update(predictionQuestion).set({\n        totalYesAmount: side ? (currentYesAmount + amount).toFixed(8) : currentYesAmount.toFixed(8),\n        totalNoAmount: !side ? (currentNoAmount + amount).toFixed(8) : currentNoAmount.toFixed(8)\n      }).where(eq(predictionQuestion.id, questionId));\n      const newTotalYes = side ? currentYesAmount + amount : currentYesAmount;\n      const newTotalNo = !side ? currentNoAmount + amount : currentNoAmount;\n      const totalPool = newTotalYes + newTotalNo;\n      const currentPotentialWinnings = side ? totalPool / newTotalYes * amount : totalPool / newTotalNo * amount;\n      return json({\n        success: true,\n        bet: {\n          id: newBet.id,\n          side,\n          amount,\n          potentialWinnings: currentPotentialWinnings\n        },\n        newBalance: Number(userData.baseCurrencyBalance) - amount\n      });\n    });\n  } catch (e) {\n    console.error(\"Betting error:\", e);\n    return json({ error: e.message }, { status: 400 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}