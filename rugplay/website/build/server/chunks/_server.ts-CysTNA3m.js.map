{"version":3,"file":"_server.ts-CysTNA3m.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/keys/_id_/regenerate/_server.ts.js"],"sourcesContent":["import { e as error, j as json } from \"../../../../../../chunks/index.js\";\nimport { a as auth } from \"../../../../../../chunks/auth.js\";\nconst POST = async (event) => {\n  const session = await auth.api.getSession({\n    headers: event.request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  const existingKey = await auth.api.getApiKey({\n    query: { id: event.params.id },\n    headers: event.request.headers\n  });\n  if (!existingKey) {\n    throw error(404, \"API key not found\");\n  }\n  if (existingKey.userId !== session.user.id) {\n    throw error(403, \"Not authorized to regenerate this API key\");\n  }\n  console.log(existingKey.remaining);\n  await auth.api.deleteApiKey({\n    body: { keyId: event.params.id },\n    headers: event.request.headers\n  });\n  let parsedPermissions = existingKey.permissions;\n  if (typeof existingKey.permissions === \"string\") {\n    try {\n      const parsed = JSON.parse(existingKey.permissions);\n      parsedPermissions = parsed && typeof parsed === \"object\" ? parsed : void 0;\n    } catch {\n      parsedPermissions = void 0;\n    }\n  }\n  const newKey = await auth.api.createApiKey({\n    body: {\n      name: existingKey.name ?? void 0,\n      userId: existingKey.userId,\n      remaining: existingKey.remaining,\n      refillAmount: existingKey.refillAmount ?? void 0,\n      refillInterval: existingKey.refillInterval ?? void 0,\n      rateLimitEnabled: existingKey.rateLimitEnabled,\n      rateLimitTimeWindow: existingKey.rateLimitTimeWindow ?? void 0,\n      rateLimitMax: existingKey.rateLimitMax ?? void 0,\n      permissions: parsedPermissions,\n      metadata: existingKey.metadata\n    },\n    headers: event.request.headers\n  });\n  console.log(existingKey.remaining);\n  console.log(newKey.remaining);\n  return json(newKey);\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEK,MAAC,IAAI,GAAG,OAAO,KAAK,KAAK;AAC9B,EAAE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;AAC5C,IAAI,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;AAC3B,GAAG,CAAC;AACJ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;AACtB,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,mBAAmB,CAAC;AACzC;AACA,EAAE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;AAC/C,IAAI,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;AAClC,IAAI,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;AAC3B,GAAG,CAAC;AACJ,EAAE,IAAI,CAAC,WAAW,EAAE;AACpB,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,mBAAmB,CAAC;AACzC;AACA,EAAE,IAAI,WAAW,CAAC,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;AAC9C,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,2CAA2C,CAAC;AACjE;AACA,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC;AACpC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;AAC9B,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;AACpC,IAAI,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;AAC3B,GAAG,CAAC;AACJ,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC,WAAW;AACjD,EAAE,IAAI,OAAO,WAAW,CAAC,WAAW,KAAK,QAAQ,EAAE;AACnD,IAAI,IAAI;AACR,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC;AACxD,MAAM,iBAAiB,GAAG,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAC;AAChF,KAAK,CAAC,MAAM;AACZ,MAAM,iBAAiB,GAAG,MAAM;AAChC;AACA;AACA,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;AAC7C,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,MAAM;AACtC,MAAM,MAAM,EAAE,WAAW,CAAC,MAAM;AAChC,MAAM,SAAS,EAAE,WAAW,CAAC,SAAS;AACtC,MAAM,YAAY,EAAE,WAAW,CAAC,YAAY,IAAI,MAAM;AACtD,MAAM,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI,MAAM;AAC1D,MAAM,gBAAgB,EAAE,WAAW,CAAC,gBAAgB;AACpD,MAAM,mBAAmB,EAAE,WAAW,CAAC,mBAAmB,IAAI,MAAM;AACpE,MAAM,YAAY,EAAE,WAAW,CAAC,YAAY,IAAI,MAAM;AACtD,MAAM,WAAW,EAAE,iBAAiB;AACpC,MAAM,QAAQ,EAAE,WAAW,CAAC;AAC5B,KAAK;AACL,IAAI,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;AAC3B,GAAG,CAAC;AACJ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC;AACpC,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AAC/B,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;AACrB;;;;"}