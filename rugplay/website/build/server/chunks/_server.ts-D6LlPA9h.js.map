{"version":3,"file":"_server.ts-D6LlPA9h.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/hopium/questions/create/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../../../chunks/index.js\";\nimport { d as db, u as user, h as predictionQuestion } from \"../../../../../../chunks/index4.js\";\nimport { eq, count, and, gte } from \"drizzle-orm\";\nimport { v as validateQuestion } from \"../../../../../../chunks/ai.js\";\nimport { i as isNameAppropriate } from \"../../../../../../chunks/moderation.js\";\nconst MIN_BALANCE_REQUIRED = 1e5;\nconst MAX_QUESTIONS_PER_HOUR = 2;\nconst MIN_RESOLUTION_HOURS = 1;\nconst MAX_RESOLUTION_DAYS = 30;\nconst POST = async ({ request }) => {\n  const session = await auth.api.getSession({ headers: request.headers });\n  if (!session?.user) throw error(401, \"Not authenticated\");\n  const { question } = await request.json();\n  const cleaned = (question ?? \"\").trim();\n  if (cleaned.length < 10 || cleaned.length > 200) {\n    return json({ error: \"Question must be between 10 and 200 characters\" }, { status: 400 });\n  }\n  if (!await isNameAppropriate(cleaned)) {\n    return json({ error: \"Question contains inappropriate content\" }, { status: 400 });\n  }\n  const userId = Number(session.user.id);\n  const now = /* @__PURE__ */ new Date();\n  try {\n    return await db.transaction(async (tx) => {\n      const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, userId)).for(\"update\").limit(1);\n      if (!userData || Number(userData.baseCurrencyBalance) < MIN_BALANCE_REQUIRED) {\n        throw new Error(`You need at least $${MIN_BALANCE_REQUIRED.toLocaleString()} to create questions`);\n      }\n      const oneHourAgo = new Date(now.getTime() - 60 * 60 * 1e3);\n      const [recentQuestions] = await tx.select({ count: count() }).from(predictionQuestion).where(and(\n        eq(predictionQuestion.creatorId, userId),\n        gte(predictionQuestion.createdAt, oneHourAgo)\n      ));\n      if (Number(recentQuestions.count) >= MAX_QUESTIONS_PER_HOUR) {\n        throw new Error(`You can only create ${MAX_QUESTIONS_PER_HOUR} questions per hour`);\n      }\n      const validation = await validateQuestion(question);\n      if (!validation.isValid) {\n        throw new Error(`Question validation failed: ${validation.reason}`);\n      }\n      let finalResolutionDate;\n      if (validation.suggestedResolutionDate && !isNaN(validation.suggestedResolutionDate.getTime())) {\n        finalResolutionDate = validation.suggestedResolutionDate;\n      } else {\n        finalResolutionDate = new Date(now.getTime() + 24 * 60 * 60 * 1e3);\n        console.warn(\"Using fallback resolution date (24h), AI suggested:\", validation.suggestedResolutionDate);\n      }\n      const minResolutionDate = new Date(now.getTime() + MIN_RESOLUTION_HOURS * 60 * 60 * 1e3);\n      const maxResolutionDate = new Date(now.getTime() + MAX_RESOLUTION_DAYS * 24 * 60 * 60 * 1e3);\n      if (finalResolutionDate < minResolutionDate) {\n        finalResolutionDate = minResolutionDate;\n      } else if (finalResolutionDate > maxResolutionDate) {\n        finalResolutionDate = maxResolutionDate;\n      }\n      const [newQuestion] = await tx.insert(predictionQuestion).values({\n        creatorId: userId,\n        question: question.trim(),\n        resolutionDate: finalResolutionDate,\n        requiresWebSearch: validation.requiresWebSearch,\n        validationReason: validation.reason\n      }).returning();\n      return json({\n        success: true,\n        question: {\n          id: newQuestion.id,\n          question: newQuestion.question,\n          resolutionDate: newQuestion.resolutionDate,\n          requiresWebSearch: newQuestion.requiresWebSearch\n        }\n      });\n    });\n  } catch (e) {\n    console.error(\"Question creation error:\", e);\n    return json({ error: e.message }, { status: 400 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}