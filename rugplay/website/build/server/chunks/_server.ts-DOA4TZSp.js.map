{"version":3,"file":"_server.ts-DOA4TZSp.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/coin/create/_server.ts.js"],"sourcesContent":["import { a as auth, u as uploadCoinIcon } from \"../../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../../chunks/index.js\";\nimport { d as db, c as coin, u as user, b as priceHistory } from \"../../../../../chunks/index4.js\";\nimport { eq } from \"drizzle-orm\";\nimport { T as TOTAL_COST, I as INITIAL_LIQUIDITY, F as FIXED_SUPPLY, S as STARTING_PRICE, M as MAX_FILE_SIZE, C as CREATION_FEE } from \"../../../../../chunks/constants.js\";\nimport { i as isNameAppropriate } from \"../../../../../chunks/moderation.js\";\nasync function validateInputs(name, symbol, iconFile) {\n  if (!name || name.length < 2 || name.length > 255) {\n    throw error(400, \"Name must be between 2 and 255 characters\");\n  }\n  if (!symbol || symbol.length < 2 || symbol.length > 10) {\n    throw error(400, \"Symbol must be between 2 and 10 characters\");\n  }\n  const alphanumericRegex = /^[a-zA-Z0-9]+$/;\n  if (!alphanumericRegex.test(name)) {\n    throw error(400, \"Coin name must contain only letters and numbers\");\n  }\n  if (!alphanumericRegex.test(symbol)) {\n    throw error(400, \"Coin symbol must contain only letters and numbers\");\n  }\n  const nameAppropriate = await isNameAppropriate(name);\n  if (!nameAppropriate) {\n    throw error(400, \"Coin name contains inappropriate content\");\n  }\n  const symbolAppropriate = await isNameAppropriate(symbol);\n  if (!symbolAppropriate) {\n    throw error(400, \"Coin symbol contains inappropriate content\");\n  }\n  if (iconFile && iconFile.size > MAX_FILE_SIZE) {\n    throw error(400, \"Icon file must be smaller than 1MB\");\n  }\n}\nasync function handleIconUpload(iconFile, symbol) {\n  if (!iconFile || iconFile.size === 0) {\n    return null;\n  }\n  const arrayBuffer = await iconFile.arrayBuffer();\n  return await uploadCoinIcon(\n    symbol,\n    new Uint8Array(arrayBuffer),\n    iconFile.type\n  );\n}\nasync function POST({ request }) {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const symbol = formData.get(\"symbol\");\n  const iconFile = formData.get(\"icon\");\n  const normalizedSymbol = symbol?.toUpperCase();\n  const userId = Number(session.user.id);\n  await validateInputs(name, normalizedSymbol, iconFile);\n  let createdCoin;\n  let iconKey = null;\n  await db.transaction(async (tx) => {\n    const existingCoin = await tx.select().from(coin).where(eq(coin.symbol, normalizedSymbol)).limit(1);\n    if (existingCoin.length > 0) {\n      throw error(400, \"A coin with this symbol already exists\");\n    }\n    const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, userId)).for(\"update\").limit(1);\n    if (!userData) {\n      throw error(404, \"User not found\");\n    }\n    const currentBalance = Number(userData.baseCurrencyBalance);\n    if (currentBalance < TOTAL_COST) {\n      throw error(400, `Insufficient funds. You need $${TOTAL_COST.toFixed(2)} but only have $${currentBalance.toFixed(2)}.`);\n    }\n    await tx.update(user).set({\n      baseCurrencyBalance: (currentBalance - TOTAL_COST).toString(),\n      updatedAt: /* @__PURE__ */ new Date()\n    }).where(eq(user.id, userId));\n    const [newCoin] = await tx.insert(coin).values({\n      name,\n      symbol: normalizedSymbol,\n      icon: null,\n      creatorId: userId,\n      initialSupply: FIXED_SUPPLY.toString(),\n      circulatingSupply: FIXED_SUPPLY.toString(),\n      currentPrice: STARTING_PRICE.toString(),\n      marketCap: (FIXED_SUPPLY * STARTING_PRICE).toString(),\n      poolCoinAmount: FIXED_SUPPLY.toString(),\n      poolBaseCurrencyAmount: INITIAL_LIQUIDITY.toString(),\n      tradingUnlocksAt: new Date(Date.now() + 60 * 1e3),\n      // 1 minute from now\n      isLocked: true\n    }).returning();\n    createdCoin = newCoin;\n    await tx.insert(priceHistory).values({\n      coinId: newCoin.id,\n      price: STARTING_PRICE.toString()\n    });\n  });\n  if (iconFile && iconFile.size > 0) {\n    try {\n      iconKey = await handleIconUpload(iconFile, normalizedSymbol);\n      await db.update(coin).set({ icon: iconKey }).where(eq(coin.id, createdCoin.id));\n      createdCoin.icon = iconKey;\n    } catch (e) {\n      console.error(\"Icon upload failed after coin creation:\", e);\n    }\n  }\n  return json({\n    success: true,\n    coin: {\n      id: createdCoin.id,\n      name: createdCoin.name,\n      symbol: createdCoin.symbol,\n      icon: createdCoin.icon\n    },\n    feePaid: CREATION_FEE,\n    liquidityDeposited: INITIAL_LIQUIDITY,\n    initialPrice: STARTING_PRICE,\n    supply: FIXED_SUPPLY,\n    message: \"Coin created! All tokens are in the liquidity pool. Buy some if you want to hold them.\"\n  });\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}