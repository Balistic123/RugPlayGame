{"version":3,"file":"_server.ts-DfL5ziHh.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/coin/_coinSymbol_/comments/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../../chunks/auth.js\";\nimport { j as json, e as error } from \"../../../../../../chunks/index.js\";\nimport { d as db, c as coin, e as commentLike, f as comment, u as user } from \"../../../../../../chunks/index4.js\";\nimport { eq, sql, and, desc } from \"drizzle-orm\";\nimport { c as client } from \"../../../../../../chunks/redis.js\";\nimport { i as isNameAppropriate } from \"../../../../../../chunks/moderation.js\";\nasync function GET({ params, request }) {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  const { coinSymbol } = params;\n  const normalizedSymbol = coinSymbol.toUpperCase();\n  try {\n    const [coinData] = await db.select({ id: coin.id }).from(coin).where(eq(coin.symbol, normalizedSymbol)).limit(1);\n    if (!coinData) {\n      return json({ message: \"Coin not found\" }, { status: 404 });\n    }\n    const commentsQuery = db.select({\n      id: comment.id,\n      content: comment.content,\n      likesCount: comment.likesCount,\n      createdAt: comment.createdAt,\n      updatedAt: comment.updatedAt,\n      userId: user.id,\n      userName: user.name,\n      userUsername: user.username,\n      userImage: user.image,\n      isLikedByUser: session?.user ? sql`EXISTS(SELECT 1 FROM ${commentLike} WHERE ${commentLike.userId} = ${session.user.id} AND ${commentLike.commentId} = ${comment.id})` : sql`FALSE`\n    }).from(comment).innerJoin(user, eq(comment.userId, user.id)).where(and(eq(comment.coinId, coinData.id), eq(comment.isDeleted, false))).orderBy(desc(comment.createdAt));\n    const comments = await commentsQuery;\n    return json({ comments });\n  } catch (err) {\n    console.error(\"Failed to fetch comments:\", err);\n    return json({ message: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function POST({ request, params }) {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  const { coinSymbol } = params;\n  const { content } = await request.json();\n  if (!content || content.trim().length === 0) {\n    throw error(400, \"Comment content is required\");\n  }\n  if (content.length > 500) {\n    throw error(400, \"Comment must be 500 characters or less\");\n  }\n  if (!await isNameAppropriate(content.trim())) {\n    throw error(400, \"Comment contains inappropriate content\");\n  }\n  const normalizedSymbol = coinSymbol.toUpperCase();\n  const userId = Number(session.user.id);\n  try {\n    const [coinData] = await db.select({ id: coin.id }).from(coin).where(eq(coin.symbol, normalizedSymbol)).limit(1);\n    if (!coinData) {\n      throw error(404, \"Coin not found\");\n    }\n    const [newComment] = await db.insert(comment).values({\n      userId,\n      coinId: coinData.id,\n      content: content.trim()\n    }).returning();\n    const [commentWithUser] = await db.select({\n      id: comment.id,\n      content: comment.content,\n      likesCount: comment.likesCount,\n      createdAt: comment.createdAt,\n      updatedAt: comment.updatedAt,\n      userId: comment.userId,\n      userName: user.name,\n      userUsername: user.username,\n      userImage: user.image,\n      isLikedByUser: sql`FALSE`\n    }).from(comment).innerJoin(user, eq(comment.userId, user.id)).where(eq(comment.id, newComment.id)).limit(1);\n    await client.publish(\n      `comments:${normalizedSymbol}`,\n      JSON.stringify({\n        type: \"new_comment\",\n        data: commentWithUser\n      })\n    );\n    return json({ comment: commentWithUser });\n  } catch (e) {\n    console.error(\"Error creating comment:\", e);\n    throw error(500, \"Failed to create comment\");\n  }\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}