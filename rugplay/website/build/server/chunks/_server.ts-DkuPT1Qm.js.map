{"version":3,"file":"_server.ts-DkuPT1Qm.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/hopium/questions/_id_/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../../../chunks/index.js\";\nimport { d as db, u as user, h as predictionQuestion, i as predictionBet } from \"../../../../../../chunks/index4.js\";\nimport { eq, desc, asc, sum, and } from \"drizzle-orm\";\nimport { t as timeToLocal } from \"../../../../../../chunks/utils2.js\";\nconst GET = async ({ params, request }) => {\n  const questionId = parseInt(params.id);\n  if (isNaN(questionId)) {\n    throw error(400, \"Invalid question ID\");\n  }\n  const session = await auth.api.getSession({ headers: request.headers });\n  const userId = session?.user ? Number(session.user.id) : null;\n  try {\n    const [questionData] = await db.select({\n      id: predictionQuestion.id,\n      question: predictionQuestion.question,\n      status: predictionQuestion.status,\n      resolutionDate: predictionQuestion.resolutionDate,\n      totalYesAmount: predictionQuestion.totalYesAmount,\n      totalNoAmount: predictionQuestion.totalNoAmount,\n      createdAt: predictionQuestion.createdAt,\n      resolvedAt: predictionQuestion.resolvedAt,\n      requiresWebSearch: predictionQuestion.requiresWebSearch,\n      aiResolution: predictionQuestion.aiResolution,\n      creatorId: predictionQuestion.creatorId,\n      creatorName: user.name,\n      creatorUsername: user.username,\n      creatorImage: user.image\n    }).from(predictionQuestion).leftJoin(user, eq(predictionQuestion.creatorId, user.id)).where(eq(predictionQuestion.id, questionId)).limit(1);\n    if (!questionData) {\n      throw error(404, \"Question not found\");\n    }\n    const totalAmount = Number(questionData.totalYesAmount) + Number(questionData.totalNoAmount);\n    const yesPercentage = totalAmount > 0 ? Number(questionData.totalYesAmount) / totalAmount * 100 : 50;\n    const noPercentage = totalAmount > 0 ? Number(questionData.totalNoAmount) / totalAmount * 100 : 50;\n    const recentBets = await db.select({\n      id: predictionBet.id,\n      side: predictionBet.side,\n      amount: predictionBet.amount,\n      createdAt: predictionBet.createdAt,\n      userId: predictionBet.userId,\n      userName: user.name,\n      userUsername: user.username,\n      userImage: user.image\n    }).from(predictionBet).leftJoin(user, eq(predictionBet.userId, user.id)).where(eq(predictionBet.questionId, questionId)).orderBy(desc(predictionBet.createdAt)).limit(10);\n    const probabilityHistory = await db.select({\n      createdAt: predictionBet.createdAt,\n      side: predictionBet.side,\n      amount: predictionBet.amount\n    }).from(predictionBet).where(eq(predictionBet.questionId, questionId)).orderBy(asc(predictionBet.createdAt));\n    let runningYesTotal = 0;\n    let runningNoTotal = 0;\n    const probabilityData = [];\n    if (probabilityHistory.length > 0) {\n      const firstBetTime = Math.floor(new Date(probabilityHistory[0].createdAt).getTime() / 1e3);\n      probabilityData.push({\n        time: timeToLocal(firstBetTime - 3600),\n        value: 50\n      });\n    }\n    for (const bet of probabilityHistory) {\n      if (bet.side) {\n        runningYesTotal += Number(bet.amount);\n      } else {\n        runningNoTotal += Number(bet.amount);\n      }\n      const total = runningYesTotal + runningNoTotal;\n      const yesPercentage2 = total > 0 ? runningYesTotal / total * 100 : 50;\n      probabilityData.push({\n        time: timeToLocal(Math.floor(new Date(bet.createdAt).getTime() / 1e3)),\n        value: Number(yesPercentage2.toFixed(1))\n      });\n    }\n    if (probabilityData.length > 0) {\n      const lastPoint = probabilityData[probabilityData.length - 1];\n      const currentTime = timeToLocal(Math.floor(Date.now() / 1e3));\n      if (currentTime - lastPoint.time > 3600) {\n        probabilityData.push({\n          time: currentTime,\n          value: Number(yesPercentage.toFixed(1))\n        });\n      }\n    }\n    let userBets = null;\n    if (userId) {\n      const userBetData = await db.select({\n        side: predictionBet.side,\n        totalAmount: sum(predictionBet.amount)\n      }).from(predictionBet).where(and(\n        eq(predictionBet.questionId, questionId),\n        eq(predictionBet.userId, userId)\n      )).groupBy(predictionBet.side);\n      const yesAmount = userBetData.find((bet) => bet.side === true)?.totalAmount || 0;\n      const noAmount = userBetData.find((bet) => bet.side === false)?.totalAmount || 0;\n      const userTotalAmount = Number(yesAmount) + Number(noAmount);\n      if (userTotalAmount > 0) {\n        const estimatedYesWinnings = Number(yesAmount) > 0 ? totalAmount / Number(questionData.totalYesAmount) * Number(yesAmount) : 0;\n        const estimatedNoWinnings = Number(noAmount) > 0 ? totalAmount / Number(questionData.totalNoAmount) * Number(noAmount) : 0;\n        userBets = {\n          yesAmount: Number(yesAmount),\n          noAmount: Number(noAmount),\n          totalAmount: userTotalAmount,\n          estimatedYesWinnings,\n          estimatedNoWinnings\n        };\n      }\n    }\n    const formattedQuestion = {\n      id: questionData.id,\n      question: questionData.question,\n      status: questionData.status,\n      resolutionDate: questionData.resolutionDate,\n      totalAmount,\n      yesAmount: Number(questionData.totalYesAmount),\n      noAmount: Number(questionData.totalNoAmount),\n      yesPercentage,\n      noPercentage,\n      createdAt: questionData.createdAt,\n      resolvedAt: questionData.resolvedAt,\n      requiresWebSearch: questionData.requiresWebSearch,\n      aiResolution: questionData.aiResolution,\n      creator: {\n        id: questionData.creatorId,\n        name: questionData.creatorName,\n        username: questionData.creatorUsername,\n        image: questionData.creatorImage\n      },\n      userBets,\n      recentBets: recentBets.map((bet) => ({\n        id: bet.id,\n        side: bet.side,\n        amount: Number(bet.amount),\n        createdAt: bet.createdAt,\n        user: {\n          id: bet.userId,\n          name: bet.userName,\n          username: bet.userUsername,\n          image: bet.userImage\n        }\n      }))\n    };\n    return json({\n      question: formattedQuestion,\n      probabilityHistory: probabilityData\n    });\n  } catch (e) {\n    console.error(\"Error fetching question:\", e);\n    if (e instanceof Error && e.message.includes(\"404\")) {\n      throw error(404, \"Question not found\");\n    }\n    return json({ error: \"Failed to fetch question\" }, { status: 500 });\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}