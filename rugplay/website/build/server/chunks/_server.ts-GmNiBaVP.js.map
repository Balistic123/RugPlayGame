{"version":3,"file":"_server.ts-GmNiBaVP.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/transfer/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../chunks/index.js\";\nimport { d as db, u as user, t as transaction, c as coin, g as userPortfolio } from \"../../../../chunks/index4.js\";\nimport { eq, and } from \"drizzle-orm\";\nimport { c as createNotification } from \"../../../../chunks/notification.js\";\nimport { f as formatValue } from \"../../../../chunks/utils2.js\";\nconst POST = async ({ request }) => {\n  const session = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!session?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  try {\n    const { recipientUsername, type, amount, coinSymbol } = await request.json();\n    if (!recipientUsername || !type || !amount || typeof amount !== \"number\" || !Number.isFinite(amount) || amount <= 0) {\n      throw error(400, \"Invalid transfer parameters\");\n    }\n    if (amount > Number.MAX_SAFE_INTEGER) {\n      throw error(400, \"Transfer amount too large\");\n    }\n    if (type === \"CASH\" && amount < 10) {\n      throw error(400, \"Cash transfers require a minimum of $10.00\");\n    }\n    if (type === \"COIN\" && !coinSymbol) {\n      throw error(400, \"Coin symbol required for coin transfers\");\n    }\n    const senderId = Number(session.user.id);\n    return await db.transaction(async (tx) => {\n      const [senderData] = await tx.select({\n        id: user.id,\n        username: user.username,\n        baseCurrencyBalance: user.baseCurrencyBalance\n      }).from(user).where(eq(user.id, senderId)).for(\"update\").limit(1);\n      if (!senderData) {\n        throw error(404, \"Sender not found\");\n      }\n      const [recipientData] = await tx.select({\n        id: user.id,\n        username: user.username,\n        baseCurrencyBalance: user.baseCurrencyBalance\n      }).from(user).where(eq(user.username, recipientUsername)).for(\"update\").limit(1);\n      if (!recipientData) {\n        throw error(404, \"Recipient not found\");\n      }\n      if (senderData.id === recipientData.id) {\n        throw error(400, \"Cannot transfer to yourself\");\n      }\n      if (type === \"CASH\") {\n        const senderBalance = Number(senderData.baseCurrencyBalance);\n        if (senderBalance < amount) {\n          throw error(400, `Insufficient funds. You have $${senderBalance.toFixed(2)} but trying to send $${amount.toFixed(2)}`);\n        }\n        const recipientBalance = Number(recipientData.baseCurrencyBalance);\n        await tx.update(user).set({\n          baseCurrencyBalance: (senderBalance - amount).toFixed(8),\n          updatedAt: /* @__PURE__ */ new Date()\n        }).where(eq(user.id, senderId));\n        await tx.update(user).set({\n          baseCurrencyBalance: (recipientBalance + amount).toFixed(8),\n          updatedAt: /* @__PURE__ */ new Date()\n        }).where(eq(user.id, recipientData.id));\n        await tx.insert(transaction).values({\n          userId: senderId,\n          coinId: 1,\n          type: \"TRANSFER_OUT\",\n          quantity: \"0\",\n          pricePerCoin: \"1\",\n          totalBaseCurrencyAmount: amount.toString(),\n          timestamp: /* @__PURE__ */ new Date(),\n          senderUserId: senderId,\n          recipientUserId: recipientData.id\n        });\n        await tx.insert(transaction).values({\n          userId: recipientData.id,\n          coinId: 1,\n          type: \"TRANSFER_IN\",\n          quantity: \"0\",\n          pricePerCoin: \"1\",\n          totalBaseCurrencyAmount: amount.toString(),\n          timestamp: /* @__PURE__ */ new Date(),\n          senderUserId: senderId,\n          recipientUserId: recipientData.id\n        });\n        (async () => {\n          await createNotification(\n            recipientData.id.toString(),\n            \"TRANSFER\",\n            \"Money received!\",\n            `You received ${formatValue(amount)} from @${senderData.username}`,\n            `/user/${senderData.id}`\n          );\n        })();\n        return json({\n          success: true,\n          type: \"CASH\",\n          amount,\n          recipient: recipientData.username,\n          newBalance: senderBalance - amount\n        });\n      } else {\n        const normalizedSymbol = coinSymbol.toUpperCase();\n        const [coinData] = await tx.select({ id: coin.id, symbol: coin.symbol, name: coin.name, currentPrice: coin.currentPrice }).from(coin).where(eq(coin.symbol, normalizedSymbol)).limit(1);\n        if (!coinData) {\n          throw error(404, \"Coin not found\");\n        }\n        const coinPrice = Number(coinData.currentPrice) || 0;\n        const estimatedValue = amount * coinPrice;\n        if (estimatedValue < 10) {\n          throw error(400, `Coin transfers require a minimum estimated value of $10.00. ${amount.toFixed(6)} ${coinData.symbol} is worth approximately $${estimatedValue.toFixed(2)}`);\n        }\n        const [senderHolding] = await tx.select({\n          quantity: userPortfolio.quantity\n        }).from(userPortfolio).where(and(\n          eq(userPortfolio.userId, senderId),\n          eq(userPortfolio.coinId, coinData.id)\n        )).for(\"update\").limit(1);\n        if (!senderHolding || Number(senderHolding.quantity) < amount) {\n          const availableAmount = senderHolding ? Number(senderHolding.quantity) : 0;\n          throw error(400, `Insufficient ${coinData.symbol}. You have ${availableAmount.toFixed(6)} but trying to send ${amount.toFixed(6)}`);\n        }\n        const [recipientHolding] = await tx.select({ quantity: userPortfolio.quantity }).from(userPortfolio).where(and(\n          eq(userPortfolio.userId, recipientData.id),\n          eq(userPortfolio.coinId, coinData.id)\n        )).for(\"update\").limit(1);\n        const totalValue = amount * coinPrice;\n        const newSenderQuantity = Number(senderHolding.quantity) - amount;\n        if (newSenderQuantity > 1e-6) {\n          await tx.update(userPortfolio).set({\n            quantity: newSenderQuantity.toString(),\n            updatedAt: /* @__PURE__ */ new Date()\n          }).where(and(\n            eq(userPortfolio.userId, senderId),\n            eq(userPortfolio.coinId, coinData.id)\n          ));\n        } else {\n          await tx.delete(userPortfolio).where(and(\n            eq(userPortfolio.userId, senderId),\n            eq(userPortfolio.coinId, coinData.id)\n          ));\n        }\n        if (recipientHolding) {\n          const newRecipientQuantity = Number(recipientHolding.quantity) + amount;\n          await tx.update(userPortfolio).set({\n            quantity: newRecipientQuantity.toString(),\n            updatedAt: /* @__PURE__ */ new Date()\n          }).where(and(\n            eq(userPortfolio.userId, recipientData.id),\n            eq(userPortfolio.coinId, coinData.id)\n          ));\n        } else {\n          await tx.insert(userPortfolio).values({\n            userId: recipientData.id,\n            coinId: coinData.id,\n            quantity: amount.toString()\n          });\n        }\n        await tx.insert(transaction).values({\n          userId: senderId,\n          coinId: coinData.id,\n          type: \"TRANSFER_OUT\",\n          quantity: amount.toString(),\n          pricePerCoin: coinPrice.toString(),\n          totalBaseCurrencyAmount: totalValue.toString(),\n          timestamp: /* @__PURE__ */ new Date(),\n          senderUserId: senderId,\n          recipientUserId: recipientData.id\n        });\n        await tx.insert(transaction).values({\n          userId: recipientData.id,\n          coinId: coinData.id,\n          type: \"TRANSFER_IN\",\n          quantity: amount.toString(),\n          pricePerCoin: coinPrice.toString(),\n          totalBaseCurrencyAmount: totalValue.toString(),\n          timestamp: /* @__PURE__ */ new Date(),\n          senderUserId: senderId,\n          recipientUserId: recipientData.id\n        });\n        (async () => {\n          await createNotification(\n            recipientData.id.toString(),\n            \"TRANSFER\",\n            \"Coins received!\",\n            `You received ${amount.toFixed(6)} *${coinData.symbol} from @${senderData.username}`,\n            `/coin/${normalizedSymbol}`\n          );\n        })();\n        return json({\n          success: true,\n          type: \"COIN\",\n          amount,\n          coinSymbol: coinData.symbol,\n          coinName: coinData.name,\n          recipient: recipientData.username,\n          newQuantity: newSenderQuantity\n        });\n      }\n    });\n  } catch (e) {\n    console.error(\"Transfer error:\", e);\n    if (e && typeof e === \"object\" && \"status\" in e) {\n      throw e;\n    }\n    return json({ error: \"Transfer failed\" }, { status: 500 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}