{"version":3,"file":"_server.ts-avZd00ED.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/hopium/questions/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../../chunks/auth.js\";\nimport { j as json } from \"../../../../../chunks/index.js\";\nimport { h as predictionQuestion, d as db, u as user, i as predictionBet } from \"../../../../../chunks/index4.js\";\nimport { eq, or, and, count, desc, sum } from \"drizzle-orm\";\nconst GET = async ({ url, request }) => {\n  const statusParam = url.searchParams.get(\"status\") || \"ACTIVE\";\n  const page = parseInt(url.searchParams.get(\"page\") || \"1\");\n  const limit = parseInt(url.searchParams.get(\"limit\") || \"20\");\n  const validStatuses = [\"ACTIVE\", \"RESOLVED\", \"CANCELLED\", \"ALL\"];\n  if (!validStatuses.includes(statusParam)) {\n    return json({ error: \"Invalid status parameter. Must be one of: ACTIVE, RESOLVED, CANCELLED, ALL\" }, { status: 400 });\n  }\n  const status = statusParam;\n  if (Number.isNaN(page) || page < 1 || Number.isNaN(limit) || limit < 1 || limit > 100) {\n    return json({ error: \"Invalid pagination parameters\" }, { status: 400 });\n  }\n  const session = await auth.api.getSession({ headers: request.headers });\n  const userId = session?.user ? Number(session.user.id) : null;\n  try {\n    let statusFilter;\n    if (status === \"ACTIVE\") {\n      statusFilter = eq(predictionQuestion.status, \"ACTIVE\");\n    } else if (status === \"RESOLVED\") {\n      statusFilter = or(\n        eq(predictionQuestion.status, \"RESOLVED\"),\n        eq(predictionQuestion.status, \"CANCELLED\")\n      );\n    } else {\n      statusFilter = void 0;\n    }\n    const conditions = [];\n    if (statusFilter) {\n      conditions.push(statusFilter);\n    }\n    const whereCondition = conditions.length > 0 ? and(...conditions) : void 0;\n    const [[{ total }], questions] = await Promise.all([\n      db.select({ total: count() }).from(predictionQuestion).where(whereCondition),\n      db.select({\n        id: predictionQuestion.id,\n        question: predictionQuestion.question,\n        status: predictionQuestion.status,\n        resolutionDate: predictionQuestion.resolutionDate,\n        totalYesAmount: predictionQuestion.totalYesAmount,\n        totalNoAmount: predictionQuestion.totalNoAmount,\n        createdAt: predictionQuestion.createdAt,\n        resolvedAt: predictionQuestion.resolvedAt,\n        requiresWebSearch: predictionQuestion.requiresWebSearch,\n        aiResolution: predictionQuestion.aiResolution,\n        creatorId: predictionQuestion.creatorId,\n        creatorName: user.name,\n        creatorUsername: user.username,\n        creatorImage: user.image\n      }).from(predictionQuestion).leftJoin(user, eq(predictionQuestion.creatorId, user.id)).where(whereCondition).orderBy(desc(predictionQuestion.createdAt)).limit(limit).offset((page - 1) * limit)\n    ]);\n    let userBetsMap = /* @__PURE__ */ new Map();\n    if (userId && questions.length > 0) {\n      const questionIds = questions.map((q) => q.id);\n      const userBets = await db.select({\n        questionId: predictionBet.questionId,\n        side: predictionBet.side,\n        totalAmount: sum(predictionBet.amount)\n      }).from(predictionBet).where(and(\n        eq(predictionBet.userId, userId)\n      )).groupBy(predictionBet.questionId, predictionBet.side);\n      userBets.filter((bet) => questionIds.includes(bet.questionId)).forEach((bet) => {\n        if (!userBetsMap.has(bet.questionId)) {\n          userBetsMap.set(bet.questionId, { yesAmount: 0, noAmount: 0 });\n        }\n        const bets = userBetsMap.get(bet.questionId);\n        if (bet.side) {\n          bets.yesAmount = Number(bet.totalAmount);\n        } else {\n          bets.noAmount = Number(bet.totalAmount);\n        }\n      });\n    }\n    const formattedQuestions = questions.map((q) => {\n      const totalAmount = Number(q.totalYesAmount) + Number(q.totalNoAmount);\n      const yesPercentage = totalAmount > 0 ? Number(q.totalYesAmount) / totalAmount * 100 : 50;\n      const noPercentage = totalAmount > 0 ? Number(q.totalNoAmount) / totalAmount * 100 : 50;\n      const userBets = userBetsMap.get(q.id) || null;\n      return {\n        id: q.id,\n        question: q.question,\n        status: q.status,\n        resolutionDate: q.resolutionDate,\n        totalAmount,\n        yesAmount: Number(q.totalYesAmount),\n        noAmount: Number(q.totalNoAmount),\n        yesPercentage,\n        noPercentage,\n        createdAt: q.createdAt,\n        resolvedAt: q.resolvedAt,\n        requiresWebSearch: q.requiresWebSearch,\n        aiResolution: q.aiResolution,\n        creator: {\n          id: q.creatorId,\n          name: q.creatorName,\n          username: q.creatorUsername,\n          image: q.creatorImage\n        },\n        userBets\n      };\n    });\n    const totalCount = Number(total) || 0;\n    return json({\n      questions: formattedQuestions,\n      total: totalCount,\n      page,\n      limit,\n      totalPages: Math.ceil(totalCount / limit)\n    });\n  } catch (e) {\n    console.error(\"Error fetching questions:\", e);\n    return json({ error: \"Failed to fetch questions\" }, { status: 500 });\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}