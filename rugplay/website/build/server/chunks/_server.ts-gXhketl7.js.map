{"version":3,"file":"_server.ts-gXhketl7.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/transactions/_server.ts.js"],"sourcesContent":["import { a as auth } from \"../../../../chunks/auth.js\";\nimport { e as error, j as json } from \"../../../../chunks/index.js\";\nimport { u as user, t as transaction, c as coin, d as db } from \"../../../../chunks/index4.js\";\nimport { eq, or, ilike, and, asc, desc, sql } from \"drizzle-orm\";\nimport { alias } from \"drizzle-orm/pg-core\";\nasync function GET({ request, url }) {\n  const authSession = await auth.api.getSession({\n    headers: request.headers\n  });\n  if (!authSession?.user) {\n    throw error(401, \"Not authenticated\");\n  }\n  const userId = Number(authSession.user.id);\n  const searchQuery = url.searchParams.get(\"search\") || \"\";\n  const typeFilter = url.searchParams.get(\"type\") || \"all\";\n  const sortBy = url.searchParams.get(\"sortBy\") || \"timestamp\";\n  const sortOrder = url.searchParams.get(\"sortOrder\") || \"desc\";\n  const pageParam = url.searchParams.get(\"page\") || \"1\";\n  const page = parseInt(pageParam);\n  if (isNaN(page) || page < 1) {\n    throw error(400, \"Invalid page parameter\");\n  }\n  const limitParam = url.searchParams.get(\"limit\") || \"20\";\n  const parsedLimit = parseInt(limitParam);\n  const limit = isNaN(parsedLimit) ? 20 : Math.min(Math.max(parsedLimit, 1), 50);\n  const recipientUser = alias(user, \"recipientUser\");\n  const senderUser = alias(user, \"senderUser\");\n  const conditions = [eq(transaction.userId, userId)];\n  if (searchQuery) {\n    conditions.push(\n      or(\n        ilike(coin.name, `%${searchQuery}%`),\n        ilike(coin.symbol, `%${searchQuery}%`)\n      )\n    );\n  }\n  if (typeFilter !== \"all\") {\n    const validTypes = [\"BUY\", \"SELL\", \"TRANSFER_IN\", \"TRANSFER_OUT\"];\n    if (validTypes.includes(typeFilter)) {\n      conditions.push(eq(transaction.type, typeFilter));\n    } else {\n      throw error(400, `Invalid type parameter. Allowed: ${validTypes.join(\", \")}`);\n    }\n  }\n  const whereConditions = conditions.length === 1 ? conditions[0] : and(...conditions);\n  let sortColumn;\n  switch (sortBy) {\n    case \"totalBaseCurrencyAmount\":\n      sortColumn = transaction.totalBaseCurrencyAmount;\n      break;\n    case \"quantity\":\n      sortColumn = transaction.quantity;\n      break;\n    case \"pricePerCoin\":\n      sortColumn = transaction.pricePerCoin;\n      break;\n    default:\n      sortColumn = transaction.timestamp;\n  }\n  const orderBy = sortOrder === \"asc\" ? asc(sortColumn) : desc(sortColumn);\n  const [{ count }] = await db.select({ count: sql`count(*)` }).from(transaction).innerJoin(coin, eq(transaction.coinId, coin.id)).where(whereConditions);\n  const transactions = await db.select({\n    id: transaction.id,\n    type: transaction.type,\n    quantity: transaction.quantity,\n    pricePerCoin: transaction.pricePerCoin,\n    totalBaseCurrencyAmount: transaction.totalBaseCurrencyAmount,\n    timestamp: transaction.timestamp,\n    recipientUserId: transaction.recipientUserId,\n    senderUserId: transaction.senderUserId,\n    coin: {\n      id: coin.id,\n      name: coin.name,\n      symbol: coin.symbol,\n      icon: coin.icon\n    },\n    recipientUser: {\n      id: recipientUser.id,\n      username: recipientUser.username\n    },\n    senderUser: {\n      id: senderUser.id,\n      username: senderUser.username\n    }\n  }).from(transaction).innerJoin(coin, eq(transaction.coinId, coin.id)).leftJoin(recipientUser, eq(transaction.recipientUserId, recipientUser.id)).leftJoin(senderUser, eq(transaction.senderUserId, senderUser.id)).where(whereConditions).orderBy(orderBy).limit(limit).offset((page - 1) * limit);\n  const formattedTransactions = transactions.map((tx) => {\n    const isTransfer = tx.type.startsWith(\"TRANSFER_\");\n    const isIncoming = tx.type === \"TRANSFER_IN\";\n    const isCoinTransfer = isTransfer && Number(tx.quantity) > 0;\n    let actualSenderUsername = null;\n    let actualRecipientUsername = null;\n    if (isTransfer) {\n      actualSenderUsername = tx.senderUser?.username;\n      actualRecipientUsername = tx.recipientUser?.username;\n    }\n    return {\n      ...tx,\n      quantity: Number(tx.quantity),\n      pricePerCoin: Number(tx.pricePerCoin),\n      totalBaseCurrencyAmount: Number(tx.totalBaseCurrencyAmount),\n      isTransfer,\n      isIncoming,\n      isCoinTransfer,\n      recipient: actualRecipientUsername,\n      sender: actualSenderUsername,\n      transferInfo: isTransfer ? {\n        isTransfer: true,\n        isIncoming,\n        isCoinTransfer,\n        otherUser: isIncoming ? tx.senderUser ? { id: tx.senderUser.id, username: actualSenderUsername } : null : tx.recipientUser ? { id: tx.recipientUser.id, username: actualRecipientUsername } : null\n      } : null\n    };\n  });\n  return json({\n    transactions: formattedTransactions,\n    total: count,\n    page,\n    limit\n  });\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}