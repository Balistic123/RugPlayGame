{"version":3,"file":"_server.ts-wQ38TEhK.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/coin/_coinSymbol_/_server.ts.js"],"sourcesContent":["import { e as error, j as json } from \"../../../../../chunks/index.js\";\nimport { d as db, c as coin, u as user, b as priceHistory, t as transaction } from \"../../../../../chunks/index4.js\";\nimport { eq, desc } from \"drizzle-orm\";\nimport { t as timeToLocal } from \"../../../../../chunks/utils2.js\";\nfunction aggregatePriceHistory(priceData, intervalMinutes = 60) {\n  if (priceData.length === 0) return [];\n  const sortedData = priceData.sort(\n    (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\n  );\n  const intervalMs = intervalMinutes * 60 * 1e3;\n  const candlesticks = /* @__PURE__ */ new Map();\n  sortedData.forEach((point) => {\n    const timestamp = new Date(point.timestamp).getTime();\n    const intervalStart = Math.floor(timestamp / intervalMs) * intervalMs;\n    if (!candlesticks.has(intervalStart)) {\n      candlesticks.set(intervalStart, {\n        time: timeToLocal(Math.floor(intervalStart / 1e3)),\n        open: point.price,\n        high: point.price,\n        low: point.price,\n        close: point.price,\n        firstTimestamp: timestamp,\n        lastTimestamp: timestamp\n      });\n    } else {\n      const candle = candlesticks.get(intervalStart);\n      candle.high = Math.max(candle.high, point.price);\n      candle.low = Math.min(candle.low, point.price);\n      if (timestamp < candle.firstTimestamp) {\n        candle.open = point.price;\n        candle.firstTimestamp = timestamp;\n      }\n      if (timestamp > candle.lastTimestamp) {\n        candle.close = point.price;\n        candle.lastTimestamp = timestamp;\n      }\n    }\n  });\n  const candleArray = Array.from(candlesticks.values()).sort((a, b) => a.time - b.time);\n  const fixedCandles = [];\n  let lastClose = null;\n  const PRICE_CHANGE_THRESHOLD = 0.01;\n  for (const candle of candleArray) {\n    if (lastClose !== null && Math.abs(candle.open - lastClose) > lastClose * PRICE_CHANGE_THRESHOLD) {\n      candle.open = lastClose;\n      candle.high = Math.max(candle.high, lastClose);\n      candle.low = Math.min(candle.low, lastClose);\n    }\n    const finalCandle = {\n      time: candle.time,\n      open: candle.open,\n      high: Math.max(candle.open, candle.close, candle.high),\n      low: Math.min(candle.open, candle.close, candle.low),\n      close: candle.close\n    };\n    fixedCandles.push(finalCandle);\n    lastClose = finalCandle.close;\n  }\n  return fixedCandles;\n}\nfunction aggregateVolumeData(transactionData, intervalMinutes = 60) {\n  if (transactionData.length === 0) return [];\n  const sortedData = transactionData.sort(\n    (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\n  );\n  const intervalMs = intervalMinutes * 60 * 1e3;\n  const volumeMap = /* @__PURE__ */ new Map();\n  sortedData.forEach((tx) => {\n    const timestamp = new Date(tx.timestamp).getTime();\n    const intervalStart = Math.floor(timestamp / intervalMs) * intervalMs;\n    if (!volumeMap.has(intervalStart)) {\n      volumeMap.set(intervalStart, {\n        time: timeToLocal(Math.floor(intervalStart / 1e3)),\n        volume: 0\n      });\n    }\n    const volumePoint = volumeMap.get(intervalStart);\n    volumePoint.volume += tx.totalBaseCurrencyAmount;\n  });\n  return Array.from(volumeMap.values()).sort((a, b) => a.time - b.time);\n}\nasync function GET({ params, url }) {\n  const coinSymbol = params.coinSymbol?.toUpperCase();\n  const timeframe = url.searchParams.get(\"timeframe\") || \"1m\";\n  if (!coinSymbol) {\n    throw error(400, \"Coin symbol is required\");\n  }\n  const timeframeMap = {\n    \"1m\": 1,\n    \"5m\": 5,\n    \"15m\": 15,\n    \"1h\": 60,\n    \"4h\": 240,\n    \"1d\": 1440\n  };\n  const intervalMinutes = timeframeMap[timeframe] || 1;\n  try {\n    const [coinData] = await db.select({\n      id: coin.id,\n      name: coin.name,\n      symbol: coin.symbol,\n      icon: coin.icon,\n      currentPrice: coin.currentPrice,\n      marketCap: coin.marketCap,\n      volume24h: coin.volume24h,\n      change24h: coin.change24h,\n      poolCoinAmount: coin.poolCoinAmount,\n      poolBaseCurrencyAmount: coin.poolBaseCurrencyAmount,\n      circulatingSupply: coin.circulatingSupply,\n      initialSupply: coin.initialSupply,\n      isListed: coin.isListed,\n      createdAt: coin.createdAt,\n      creatorId: coin.creatorId,\n      creatorName: user.name,\n      creatorUsername: user.username,\n      creatorBio: user.bio,\n      creatorImage: user.image,\n      tradingUnlocksAt: coin.tradingUnlocksAt,\n      isLocked: coin.isLocked\n    }).from(coin).leftJoin(user, eq(coin.creatorId, user.id)).where(eq(coin.symbol, coinSymbol)).limit(1);\n    if (!coinData) {\n      throw error(404, \"Coin not found\");\n    }\n    const [rawPriceHistory, rawTransactions] = await Promise.all([\n      db.select({ price: priceHistory.price, timestamp: priceHistory.timestamp }).from(priceHistory).where(eq(priceHistory.coinId, coinData.id)).orderBy(desc(priceHistory.timestamp)).limit(5e3),\n      db.select({\n        totalBaseCurrencyAmount: transaction.totalBaseCurrencyAmount,\n        timestamp: transaction.timestamp\n      }).from(transaction).where(eq(transaction.coinId, coinData.id)).orderBy(desc(transaction.timestamp)).limit(5e3)\n    ]);\n    const priceData = rawPriceHistory.map((p) => ({\n      price: Number(p.price),\n      timestamp: p.timestamp\n    }));\n    const transactionData = rawTransactions.map((t) => ({\n      totalBaseCurrencyAmount: Number(t.totalBaseCurrencyAmount),\n      timestamp: t.timestamp\n    }));\n    const candlestickData = aggregatePriceHistory(priceData, intervalMinutes);\n    const volumeData = aggregateVolumeData(transactionData, intervalMinutes);\n    return json({\n      coin: {\n        ...coinData,\n        currentPrice: Number(coinData.currentPrice),\n        marketCap: Number(coinData.marketCap),\n        volume24h: Number(coinData.volume24h),\n        change24h: Number(coinData.change24h),\n        poolCoinAmount: Number(coinData.poolCoinAmount),\n        poolBaseCurrencyAmount: Number(coinData.poolBaseCurrencyAmount),\n        circulatingSupply: Number(coinData.circulatingSupply),\n        initialSupply: Number(coinData.initialSupply),\n        tradingUnlocksAt: coinData.tradingUnlocksAt,\n        isLocked: coinData.isLocked\n      },\n      candlestickData,\n      volumeData,\n      timeframe\n    });\n  } catch (e) {\n    if (e && typeof e === \"object\" && \"status\" in e) {\n      throw e;\n    }\n    console.error(\"Unexpected error in coin API:\", e);\n    throw error(500, \"Internal server error\");\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAIA,SAAS,qBAAqB,CAAC,SAAS,EAAE,eAAe,GAAG,EAAE,EAAE;AAChE,EAAE,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;AACvC,EAAE,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI;AACnC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO;AAC7E,GAAG;AACH,EAAE,MAAM,UAAU,GAAG,eAAe,GAAG,EAAE,GAAG,GAAG;AAC/C,EAAE,MAAM,YAAY,mBAAmB,IAAI,GAAG,EAAE;AAChD,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAChC,IAAI,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;AACzD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,UAAU;AACzE,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;AAC1C,MAAM,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE;AACtC,QAAQ,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;AAC1D,QAAQ,IAAI,EAAE,KAAK,CAAC,KAAK;AACzB,QAAQ,IAAI,EAAE,KAAK,CAAC,KAAK;AACzB,QAAQ,GAAG,EAAE,KAAK,CAAC,KAAK;AACxB,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK;AAC1B,QAAQ,cAAc,EAAE,SAAS;AACjC,QAAQ,aAAa,EAAE;AACvB,OAAO,CAAC;AACR,KAAK,MAAM;AACX,MAAM,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC;AACpD,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC;AACtD,MAAM,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC;AACpD,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,EAAE;AAC7C,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK;AACjC,QAAQ,MAAM,CAAC,cAAc,GAAG,SAAS;AACzC;AACA,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,aAAa,EAAE;AAC5C,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;AAClC,QAAQ,MAAM,CAAC,aAAa,GAAG,SAAS;AACxC;AACA;AACA,GAAG,CAAC;AACJ,EAAE,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACvF,EAAE,MAAM,YAAY,GAAG,EAAE;AACzB,EAAE,IAAI,SAAS,GAAG,IAAI;AACtB,EAAE,MAAM,sBAAsB,GAAG,IAAI;AACrC,EAAE,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE;AACpC,IAAI,IAAI,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,SAAS,GAAG,sBAAsB,EAAE;AACtG,MAAM,MAAM,CAAC,IAAI,GAAG,SAAS;AAC7B,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;AACpD,MAAM,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC;AAClD;AACA,IAAI,MAAM,WAAW,GAAG;AACxB,MAAM,IAAI,EAAE,MAAM,CAAC,IAAI;AACvB,MAAM,IAAI,EAAE,MAAM,CAAC,IAAI;AACvB,MAAM,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC;AAC5D,MAAM,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC;AAC1D,MAAM,KAAK,EAAE,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;AAClC,IAAI,SAAS,GAAG,WAAW,CAAC,KAAK;AACjC;AACA,EAAE,OAAO,YAAY;AACrB;AACA,SAAS,mBAAmB,CAAC,eAAe,EAAE,eAAe,GAAG,EAAE,EAAE;AACpE,EAAE,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;AAC7C,EAAE,MAAM,UAAU,GAAG,eAAe,CAAC,IAAI;AACzC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO;AAC7E,GAAG;AACH,EAAE,MAAM,UAAU,GAAG,eAAe,GAAG,EAAE,GAAG,GAAG;AAC/C,EAAE,MAAM,SAAS,mBAAmB,IAAI,GAAG,EAAE;AAC7C,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AAC7B,IAAI,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;AACtD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,UAAU;AACzE,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;AACvC,MAAM,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE;AACnC,QAAQ,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;AAC1D,QAAQ,MAAM,EAAE;AAChB,OAAO,CAAC;AACR;AACA,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;AACpD,IAAI,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,uBAAuB;AACpD,GAAG,CAAC;AACJ,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACvE;AACA,eAAe,GAAG,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;AACpC,EAAE,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE;AACrD,EAAE,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI;AAC7D,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,yBAAyB,CAAC;AAC/C;AACA,EAAE,MAAM,YAAY,GAAG;AACvB,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,KAAK,EAAE,EAAE;AACb,IAAI,IAAI,EAAE,EAAE;AACZ,IAAI,IAAI,EAAE,GAAG;AACb,IAAI,IAAI,EAAE;AACV,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;AACtD,EAAE,IAAI;AACN,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC;AACvC,MAAM,EAAE,EAAE,IAAI,CAAC,EAAE;AACjB,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,YAAY,EAAE,IAAI,CAAC,YAAY;AACrC,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,cAAc,EAAE,IAAI,CAAC,cAAc;AACzC,MAAM,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;AACzD,MAAM,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;AAC/C,MAAM,aAAa,EAAE,IAAI,CAAC,aAAa;AACvC,MAAM,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC7B,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,WAAW,EAAE,IAAI,CAAC,IAAI;AAC5B,MAAM,eAAe,EAAE,IAAI,CAAC,QAAQ;AACpC,MAAM,UAAU,EAAE,IAAI,CAAC,GAAG;AAC1B,MAAM,YAAY,EAAE,IAAI,CAAC,KAAK;AAC9B,MAAM,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AAC7C,MAAM,QAAQ,EAAE,IAAI,CAAC;AACrB,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACzG,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,MAAM,KAAK,CAAC,GAAG,EAAE,gBAAgB,CAAC;AACxC;AACA,IAAI,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;AACjE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AACjM,MAAM,EAAE,CAAC,MAAM,CAAC;AAChB,QAAQ,uBAAuB,EAAE,WAAW,CAAC,uBAAuB;AACpE,QAAQ,SAAS,EAAE,WAAW,CAAC;AAC/B,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;AACpH,KAAK,CAAC;AACN,IAAI,MAAM,SAAS,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AAClD,MAAM,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;AAC5B,MAAM,SAAS,EAAE,CAAC,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AACxD,MAAM,uBAAuB,EAAE,MAAM,CAAC,CAAC,CAAC,uBAAuB,CAAC;AAChE,MAAM,SAAS,EAAE,CAAC,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,eAAe,GAAG,qBAAqB,CAAC,SAAS,EAAE,eAAe,CAAC;AAC7E,IAAI,MAAM,UAAU,GAAG,mBAAmB,CAAC,eAAe,EAAE,eAAe,CAAC;AAC5E,IAAI,OAAO,IAAI,CAAC;AAChB,MAAM,IAAI,EAAE;AACZ,QAAQ,GAAG,QAAQ;AACnB,QAAQ,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC;AACnD,QAAQ,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC7C,QAAQ,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC7C,QAAQ,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC7C,QAAQ,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC;AACvD,QAAQ,sBAAsB,EAAE,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC;AACvE,QAAQ,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC;AAC7D,QAAQ,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;AACrD,QAAQ,gBAAgB,EAAE,QAAQ,CAAC,gBAAgB;AACnD,QAAQ,QAAQ,EAAE,QAAQ,CAAC;AAC3B,OAAO;AACP,MAAM,eAAe;AACrB,MAAM,UAAU;AAChB,MAAM;AACN,KAAK,CAAC;AACN,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,QAAQ,IAAI,CAAC,EAAE;AACrD,MAAM,MAAM,CAAC;AACb;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,CAAC,CAAC;AACrD,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,uBAAuB,CAAC;AAC7C;AACA;;;;"}