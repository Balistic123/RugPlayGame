{"version":3,"file":"hooks.server-D0aGGXGp.js","sources":["../../../.svelte-kit/adapter-node/chunks/hooks.server.js"],"sourcesContent":["import { a as auth } from \"./auth.js\";\nimport { d as db, u as user, h as predictionQuestion, i as predictionBet, k as accountDeletionRequest, t as transaction, f as comment, c as coin, s as session, l as account, a as promoCodeRedemption, g as userPortfolio, e as commentLike } from \"./index4.js\";\nimport { eq, and, lte, isNull } from \"drizzle-orm\";\nimport { g as getRugplayData, r as resolveQuestion } from \"./ai.js\";\nimport { c as createNotification } from \"./notification.js\";\nimport { f as formatValue } from \"./utils2.js\";\nimport { svelteKitHandler } from \"better-auth/svelte-kit\";\nimport { c as client } from \"./redis.js\";\nimport { b as building } from \"./environment.js\";\nimport { r as redirect } from \"./index.js\";\nimport \"clsx\";\nimport \"./volume-settings.js\";\nconst MINES_SESSION_PREFIX = \"mines:session:\";\nconst getSessionKey = (token) => `${MINES_SESSION_PREFIX}${token}`;\nasync function minesCleanupInactiveGames() {\n  const now = Date.now();\n  const keys = [];\n  let cursor = \"0\";\n  do {\n    const scanResult = await client.scan(cursor, { MATCH: `${MINES_SESSION_PREFIX}*` });\n    cursor = scanResult.cursor;\n    keys.push(...scanResult.keys);\n  } while (cursor !== \"0\");\n  for (const key of keys) {\n    const sessionRaw = await client.get(key);\n    if (!sessionRaw) continue;\n    const game = JSON.parse(sessionRaw);\n    if (now - game.lastActivity > 5 * 60 * 1e3) {\n      if (game.revealedTiles.length === 0) {\n        try {\n          const [userData] = await db.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, game.userId)).for(\"update\").limit(1);\n          const currentBalance = Number(userData.baseCurrencyBalance);\n          const newBalance = Math.round((currentBalance + game.betAmount) * 1e8) / 1e8;\n          await db.update(user).set({\n            baseCurrencyBalance: newBalance.toFixed(8),\n            updatedAt: /* @__PURE__ */ new Date()\n          }).where(eq(user.id, game.userId));\n        } catch (error) {\n          console.error(`Failed to refund inactive game ${game.sessionToken}:`, error);\n        }\n      }\n      await client.del(getSessionKey(game.sessionToken));\n    }\n  }\n}\nasync function minesAutoCashout() {\n  const now = Date.now();\n  const keys = [];\n  let cursor = \"0\";\n  do {\n    const scanResult = await client.scan(cursor, { MATCH: `${MINES_SESSION_PREFIX}*` });\n    cursor = scanResult.cursor;\n    keys.push(...scanResult.keys);\n  } while (cursor !== \"0\");\n  for (const key of keys) {\n    const sessionRaw = await client.get(key);\n    if (!sessionRaw) continue;\n    const game = JSON.parse(sessionRaw);\n    if (game.status === \"active\" && game.revealedTiles.length > 0 && now - game.lastActivity > 2e4 && !game.revealedTiles.some((idx) => game.minePositions.includes(idx))) {\n      try {\n        const [userData] = await db.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, game.userId)).for(\"update\").limit(1);\n        const currentBalance = Number(userData.baseCurrencyBalance);\n        const payout = game.betAmount * game.currentMultiplier;\n        const roundedPayout = Math.round(payout * 1e8) / 1e8;\n        const newBalance = Math.round((currentBalance + roundedPayout) * 1e8) / 1e8;\n        await db.update(user).set({\n          baseCurrencyBalance: newBalance.toFixed(8),\n          updatedAt: /* @__PURE__ */ new Date()\n        }).where(eq(user.id, game.userId));\n        await client.del(getSessionKey(game.sessionToken));\n      } catch (error) {\n        console.error(`Failed to auto cashout game ${game.sessionToken}:`, error);\n      }\n    }\n  }\n}\nasync function resolveExpiredQuestions() {\n  const now = /* @__PURE__ */ new Date();\n  try {\n    const expiredQuestions = await db.select({\n      id: predictionQuestion.id,\n      question: predictionQuestion.question,\n      requiresWebSearch: predictionQuestion.requiresWebSearch,\n      totalYesAmount: predictionQuestion.totalYesAmount,\n      totalNoAmount: predictionQuestion.totalNoAmount\n    }).from(predictionQuestion).where(and(\n      eq(predictionQuestion.status, \"ACTIVE\"),\n      lte(predictionQuestion.resolutionDate, now),\n      isNull(predictionQuestion.aiResolution)\n    ));\n    console.log(`Found ${expiredQuestions.length} questions to resolve`);\n    for (const question of expiredQuestions) {\n      try {\n        console.log(`Resolving question: ${question.question}`);\n        const rugplayData = await getRugplayData();\n        const resolution = await resolveQuestion(\n          question.question,\n          question.requiresWebSearch,\n          rugplayData\n        );\n        if (resolution.confidence < 50) {\n          console.log(`Cancelling question ${question.id} due to low confidence: ${resolution.confidence}`);\n          await db.transaction(async (tx) => {\n            await tx.update(predictionQuestion).set({\n              status: \"CANCELLED\",\n              resolvedAt: now\n            }).where(eq(predictionQuestion.id, question.id));\n            const bets = await tx.select({\n              id: predictionBet.id,\n              userId: predictionBet.userId,\n              side: predictionBet.side,\n              amount: predictionBet.amount\n            }).from(predictionBet).where(and(\n              eq(predictionBet.questionId, question.id),\n              isNull(predictionBet.settledAt)\n            ));\n            const notificationsToCreate = [];\n            for (const bet of bets) {\n              const refundAmount = Number(bet.amount);\n              await tx.update(predictionBet).set({\n                actualWinnings: refundAmount.toFixed(8),\n                settledAt: now\n              }).where(eq(predictionBet.id, bet.id));\n              if (bet.userId !== null) {\n                const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, bet.userId)).limit(1);\n                if (userData) {\n                  const newBalance = Number(userData.baseCurrencyBalance) + refundAmount;\n                  await tx.update(user).set({\n                    baseCurrencyBalance: newBalance.toFixed(8),\n                    updatedAt: now\n                  }).where(eq(user.id, bet.userId));\n                }\n                notificationsToCreate.push({\n                  userId: bet.userId,\n                  amount: refundAmount\n                });\n              }\n            }\n            for (const notifData of notificationsToCreate) {\n              const { userId, amount } = notifData;\n              const title = \"Prediction skipped 🥀\";\n              const message = `You received a full refund of ${formatValue(amount)} for \"${question.question}\". We recommend betting on more reliable predictions!`;\n              await createNotification(\n                userId.toString(),\n                \"HOPIUM\",\n                title,\n                message,\n                `/hopium/${question.id}`\n              );\n            }\n          });\n          continue;\n        }\n        await db.transaction(async (tx) => {\n          await tx.update(predictionQuestion).set({\n            status: \"RESOLVED\",\n            aiResolution: resolution.resolution,\n            resolvedAt: now\n          }).where(eq(predictionQuestion.id, question.id));\n          const bets = await tx.select({\n            id: predictionBet.id,\n            userId: predictionBet.userId,\n            side: predictionBet.side,\n            amount: predictionBet.amount\n          }).from(predictionBet).where(and(\n            eq(predictionBet.questionId, question.id),\n            isNull(predictionBet.settledAt)\n          ));\n          const totalPool = Number(question.totalYesAmount) + Number(question.totalNoAmount);\n          const winningSideTotal = resolution.resolution ? Number(question.totalYesAmount) : Number(question.totalNoAmount);\n          const notificationsToCreate = [];\n          for (const bet of bets) {\n            const won = bet.side === resolution.resolution;\n            const winnings = won && winningSideTotal > 0 ? totalPool / winningSideTotal * Number(bet.amount) : 0;\n            await tx.update(predictionBet).set({\n              actualWinnings: winnings.toFixed(8),\n              settledAt: now\n            }).where(eq(predictionBet.id, bet.id));\n            if (won && winnings > 0 && bet.userId !== null) {\n              const [userData] = await tx.select({ baseCurrencyBalance: user.baseCurrencyBalance }).from(user).where(eq(user.id, bet.userId)).limit(1);\n              if (userData) {\n                const newBalance = Number(userData.baseCurrencyBalance) + winnings;\n                await tx.update(user).set({\n                  baseCurrencyBalance: newBalance.toFixed(8),\n                  updatedAt: now\n                }).where(eq(user.id, bet.userId));\n              }\n            }\n            if (bet.userId !== null) {\n              notificationsToCreate.push({\n                userId: bet.userId,\n                amount: Number(bet.amount),\n                winnings,\n                won\n              });\n            }\n          }\n          for (const notifData of notificationsToCreate) {\n            const { userId, amount, winnings, won } = notifData;\n            const title = won ? \"Prediction won! 🎉\" : \"Prediction lost ;(\";\n            const message = won ? `You won ${formatValue(winnings)} on \"${question.question}\"` : `You lost ${formatValue(amount)} on \"${question.question}\"`;\n            await createNotification(\n              userId.toString(),\n              \"HOPIUM\",\n              title,\n              message,\n              `/hopium/${question.id}`\n            );\n          }\n        });\n      } catch (error) {\n        console.error(`Failed to resolve question ${question.id}:`, error);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error in resolveExpiredQuestions:\", error);\n  }\n}\nasync function processAccountDeletions() {\n  const now = /* @__PURE__ */ new Date();\n  try {\n    const expiredRequests = await db.select().from(accountDeletionRequest).where(\n      and(\n        lte(accountDeletionRequest.scheduledDeletionAt, now),\n        eq(accountDeletionRequest.isProcessed, false)\n      )\n    );\n    console.log(`🗑️ Processing ${expiredRequests.length} expired account deletion requests`);\n    for (const request of expiredRequests) {\n      try {\n        await db.transaction(async (tx) => {\n          const userId = request.userId;\n          await tx.update(transaction).set({ userId: null }).where(eq(transaction.userId, userId));\n          await tx.update(comment).set({ userId: null, content: \"[deleted]\", isDeleted: true }).where(eq(comment.userId, userId));\n          await tx.update(predictionBet).set({ userId: null }).where(eq(predictionBet.userId, userId));\n          await tx.update(predictionQuestion).set({ creatorId: null }).where(eq(predictionQuestion.creatorId, userId));\n          await tx.update(coin).set({ creatorId: null }).where(eq(coin.creatorId, userId));\n          await tx.delete(session).where(eq(session.userId, userId));\n          await tx.delete(account).where(eq(account.userId, userId));\n          await tx.delete(promoCodeRedemption).where(eq(promoCodeRedemption.userId, userId));\n          await tx.delete(userPortfolio).where(eq(userPortfolio.userId, userId));\n          await tx.delete(commentLike).where(eq(commentLike.userId, userId));\n          await tx.update(accountDeletionRequest).set({ isProcessed: true }).where(eq(accountDeletionRequest.id, request.id));\n          await tx.delete(user).where(eq(user.id, userId));\n        });\n        console.log(`✅ Successfully processed account deletion for user ID: ${request.userId}`);\n      } catch (error) {\n        console.error(`❌ Failed to process account deletion for user ID: ${request.userId}`, error);\n        await db.update(accountDeletionRequest).set({\n          isProcessed: true,\n          // Mark as processed to avoid retries, but log the failure\n          reason: request.reason ? `${request.reason} - FAILED: ${error.message}` : `FAILED: ${error.message}`\n        }).where(eq(accountDeletionRequest.id, request.id));\n      }\n    }\n  } catch (error) {\n    console.error(\"Error processing account deletions:\", error);\n  }\n}\nasync function initializeScheduler() {\n  if (building) return;\n  try {\n    const lockKey = \"hopium:scheduler\";\n    const lockValue = `${process.pid}-${Date.now()}`;\n    const lockTTL = 300;\n    const result = await client.set(lockKey, lockValue, {\n      NX: true,\n      EX: lockTTL\n    });\n    if (result === \"OK\") {\n      console.log(`🕐 Starting scheduler (PID: ${process.pid})`);\n      const renewInterval = setInterval(async () => {\n        try {\n          const currentValue = await client.get(lockKey);\n          if (currentValue === lockValue) {\n            await client.expire(lockKey, lockTTL);\n          } else {\n            clearInterval(renewInterval);\n            clearInterval(schedulerInterval);\n            console.log(\"Lost scheduler lock, stopping...\");\n          }\n        } catch (error) {\n          console.error(\"Failed to renew scheduler lock:\", error);\n        }\n      }, lockTTL / 2 * 1e3);\n      resolveExpiredQuestions().catch(console.error);\n      processAccountDeletions().catch(console.error);\n      const schedulerInterval = setInterval(() => {\n        resolveExpiredQuestions().catch(console.error);\n        processAccountDeletions().catch(console.error);\n      }, 5 * 60 * 1e3);\n      const minesCleanupInterval = setInterval(() => {\n        minesCleanupInactiveGames().catch(console.error);\n        minesAutoCashout().catch(console.error);\n      }, 60 * 1e3);\n      const cleanup = async () => {\n        clearInterval(renewInterval);\n        clearInterval(schedulerInterval);\n        clearInterval(minesCleanupInterval);\n        const currentValue = await client.get(lockKey);\n        if (currentValue === lockValue) {\n          await client.del(lockKey);\n        }\n      };\n      process.on(\"SIGTERM\", cleanup);\n      process.on(\"SIGINT\", cleanup);\n      process.on(\"beforeExit\", cleanup);\n    } else {\n      console.log(\"📋 Scheduler already running\");\n    }\n  } catch (error) {\n    console.error(\"Failed to initialize scheduler:\", error);\n  }\n}\ninitializeScheduler();\nconst sessionCache = /* @__PURE__ */ new Map();\nconst CACHE_TTL = 5 * 60 * 1e3;\nconst CACHE_CLEANUP_INTERVAL = 10 * 60 * 1e3;\nsetInterval(() => {\n  const now = Date.now();\n  for (const [key, value] of sessionCache.entries()) {\n    if (now - value.timestamp > value.ttl) {\n      sessionCache.delete(key);\n    }\n  }\n}, CACHE_CLEANUP_INTERVAL);\nconst handle = async ({ event, resolve }) => {\n  if (event.url.pathname.startsWith(\"/.well-known/appspecific/com.chrome.devtools\")) {\n    return new Response(null, { status: 204 });\n  }\n  const session2 = await auth.api.getSession({\n    headers: event.request.headers\n  });\n  let userData = null;\n  if (session2?.user) {\n    const userId = session2.user.id;\n    const cacheKey = `user:${userId}`;\n    const now = Date.now();\n    const cached = sessionCache.get(cacheKey);\n    if (cached && now - cached.timestamp < cached.ttl) {\n      userData = cached.userData;\n    } else {\n      const [userRecord] = await db.select({\n        id: user.id,\n        name: user.name,\n        username: user.username,\n        email: user.email,\n        isAdmin: user.isAdmin,\n        image: user.image,\n        isBanned: user.isBanned,\n        banReason: user.banReason,\n        baseCurrencyBalance: user.baseCurrencyBalance,\n        bio: user.bio,\n        volumeMaster: user.volumeMaster,\n        volumeMuted: user.volumeMuted\n      }).from(user).where(eq(user.id, Number(userId))).limit(1);\n      if (userRecord?.isBanned) {\n        try {\n          await auth.api.signOut({\n            headers: event.request.headers\n          });\n        } catch (e) {\n          console.error(\"Failed to sign out banned user:\", e);\n        }\n        if (event.url.pathname !== \"/banned\") {\n          const banReason = encodeURIComponent(userRecord.banReason || \"Account suspended\");\n          throw redirect(302, `/banned?reason=${banReason}`);\n        }\n      } else if (userRecord) {\n        userData = {\n          id: userRecord.id.toString(),\n          name: userRecord.name,\n          username: userRecord.username,\n          email: userRecord.email,\n          isAdmin: userRecord.isAdmin || false,\n          image: userRecord.image || \"\",\n          isBanned: userRecord.isBanned || false,\n          banReason: userRecord.banReason,\n          avatarUrl: userRecord.image,\n          baseCurrencyBalance: parseFloat(userRecord.baseCurrencyBalance || \"0\"),\n          bio: userRecord.bio || \"\",\n          volumeMaster: parseFloat(userRecord.volumeMaster || \"0.7\"),\n          volumeMuted: userRecord.volumeMuted || false\n        };\n        const cacheTTL = userRecord.isAdmin ? CACHE_TTL * 2 : CACHE_TTL;\n        sessionCache.set(cacheKey, {\n          userData,\n          timestamp: now,\n          ttl: cacheTTL\n        });\n      }\n    }\n  }\n  event.locals.userSession = userData;\n  if (event.url.pathname.startsWith(\"/api/\") && !event.url.pathname.startsWith(\"/api/proxy/\")) {\n    const response = await svelteKitHandler({ event, resolve, auth });\n    response.headers.set(\"Cache-Control\", \"no-store, no-cache, must-revalidate, private\");\n    return response;\n  }\n  return svelteKitHandler({ event, resolve, auth });\n};\nfunction clearUserCache(userId) {\n  sessionCache.delete(`user:${userId}`);\n}\nexport {\n  clearUserCache,\n  handle\n};\n"],"names":[],"mappings":"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"}